services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: docker-platform-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - docker-platform

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: docker-platform-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    expose:
      - "8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - DB_HOST=45.154.238.111
      - DB_PORT=5432
      - DB_NAME=docker_platform
      - DB_USER=danny
      - DB_PASSWORD=Jjustmee12773
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend/logs:/app/logs
    depends_on:
      - redis
    networks:
      - docker-platform

  # Frontend React App (without nginx, just the build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: docker-platform-frontend
    restart: unless-stopped
    ports:
      - "3003:3000"
    expose:
      - "3000"
    environment:
      - REACT_APP_API_URL=http://localhost/api
      - REACT_APP_WS_URL=ws://localhost
      - REACT_APP_VERSION=1.0.0
    depends_on:
      - backend
    networks:
      - docker-platform

  # Central Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: docker-platform-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - docker-platform

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: docker-platform-prometheus
    restart: unless-stopped
    expose:
      - "9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - docker-platform

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: docker-platform-grafana
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - docker-platform

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
  nginx_logs:

networks:
  docker-platform:
    driver: bridge 